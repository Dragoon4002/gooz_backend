/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ChainlinkVRFV2PlusWrapperConsumerBaseStub,
  ChainlinkVRFV2PlusWrapperConsumerBaseStubInterface,
} from "../ChainlinkVRFV2PlusWrapperConsumerBaseStub";

const _abi = [
  {
    type: "function",
    name: "getBalance",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "i_vrfV2PlusWrapper",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IVRFV2PlusWrapper",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "rawFulfillRandomWords",
    inputs: [
      {
        name: "_requestId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_randomWords",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "error",
    name: "OnlyVRFWrapperCanFulfill",
    inputs: [
      {
        name: "have",
        type: "address",
        internalType: "address",
      },
      {
        name: "want",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

export class ChainlinkVRFV2PlusWrapperConsumerBaseStub__factory {
  static readonly abi = _abi;
  static createInterface(): ChainlinkVRFV2PlusWrapperConsumerBaseStubInterface {
    return new Interface(
      _abi
    ) as ChainlinkVRFV2PlusWrapperConsumerBaseStubInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ChainlinkVRFV2PlusWrapperConsumerBaseStub {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ChainlinkVRFV2PlusWrapperConsumerBaseStub;
  }
}
