import { type ContractRunner } from "ethers";
import type { IRandomnessSender, IRandomnessSenderInterface } from "../IRandomnessSender";
export declare class IRandomnessSender__factory {
    static readonly abi: readonly [{
        readonly type: "function";
        readonly name: "acceptSubscriptionOwnerTransfer";
        readonly inputs: readonly [{
            readonly name: "subId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "addConsumer";
        readonly inputs: readonly [{
            readonly name: "subId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "consumer";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "calculateRequestPriceNative";
        readonly inputs: readonly [{
            readonly name: "_callbackGasLimit";
            readonly type: "uint32";
            readonly internalType: "uint32";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "cancelSubscription";
        readonly inputs: readonly [{
            readonly name: "subId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "to";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "createSubscription";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "subId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "estimateRequestPriceNative";
        readonly inputs: readonly [{
            readonly name: "_callbackGasLimit";
            readonly type: "uint32";
            readonly internalType: "uint32";
        }, {
            readonly name: "_requestGasPriceWei";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "fundSubscriptionWithNative";
        readonly inputs: readonly [{
            readonly name: "subId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
    }, {
        readonly type: "function";
        readonly name: "getActiveSubscriptionIds";
        readonly inputs: readonly [{
            readonly name: "startIndex";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "maxCount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256[]";
            readonly internalType: "uint256[]";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getAllRequests";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "tuple[]";
            readonly internalType: "struct TypesLib.RandomnessRequest[]";
            readonly components: readonly [{
                readonly name: "subId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "directFundingFeePaid";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "callbackGasLimit";
                readonly type: "uint32";
                readonly internalType: "uint32";
            }, {
                readonly name: "requestId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "message";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }, {
                readonly name: "condition";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }, {
                readonly name: "signature";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }, {
                readonly name: "nonce";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "callback";
                readonly type: "address";
                readonly internalType: "address";
            }];
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getConfig";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "maxGasLimit";
            readonly type: "uint32";
            readonly internalType: "uint32";
        }, {
            readonly name: "gasAfterPaymentCalculation";
            readonly type: "uint32";
            readonly internalType: "uint32";
        }, {
            readonly name: "fulfillmentFlatFeeNativePPM";
            readonly type: "uint32";
            readonly internalType: "uint32";
        }, {
            readonly name: "weiPerUnitGas";
            readonly type: "uint32";
            readonly internalType: "uint32";
        }, {
            readonly name: "blsPairingCheckOverhead";
            readonly type: "uint32";
            readonly internalType: "uint32";
        }, {
            readonly name: "nativePremiumPercentage";
            readonly type: "uint8";
            readonly internalType: "uint8";
        }, {
            readonly name: "gasForCallExactCheck";
            readonly type: "uint32";
            readonly internalType: "uint32";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getRequest";
        readonly inputs: readonly [{
            readonly name: "requestId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "tuple";
            readonly internalType: "struct TypesLib.RandomnessRequest";
            readonly components: readonly [{
                readonly name: "subId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "directFundingFeePaid";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "callbackGasLimit";
                readonly type: "uint32";
                readonly internalType: "uint32";
            }, {
                readonly name: "requestId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "message";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }, {
                readonly name: "condition";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }, {
                readonly name: "signature";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }, {
                readonly name: "nonce";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "callback";
                readonly type: "address";
                readonly internalType: "address";
            }];
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getSubscription";
        readonly inputs: readonly [{
            readonly name: "subId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "nativeBalance";
            readonly type: "uint96";
            readonly internalType: "uint96";
        }, {
            readonly name: "reqCount";
            readonly type: "uint64";
            readonly internalType: "uint64";
        }, {
            readonly name: "owner";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "consumers";
            readonly type: "address[]";
            readonly internalType: "address[]";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "isInFlight";
        readonly inputs: readonly [{
            readonly name: "requestId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "messageFrom";
        readonly inputs: readonly [{
            readonly name: "r";
            readonly type: "tuple";
            readonly internalType: "struct TypesLib.RandomnessRequestCreationParams";
            readonly components: readonly [{
                readonly name: "nonce";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "callback";
                readonly type: "address";
                readonly internalType: "address";
            }];
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly stateMutability: "pure";
    }, {
        readonly type: "function";
        readonly name: "pendingRequestExists";
        readonly inputs: readonly [{
            readonly name: "subId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "removeConsumer";
        readonly inputs: readonly [{
            readonly name: "subId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "consumer";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "requestRandomness";
        readonly inputs: readonly [{
            readonly name: "callbackGasLimit";
            readonly type: "uint32";
            readonly internalType: "uint32";
        }];
        readonly outputs: readonly [{
            readonly name: "requestID";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "payable";
    }, {
        readonly type: "function";
        readonly name: "requestRandomnessWithSubscription";
        readonly inputs: readonly [{
            readonly name: "callbackGasLimit";
            readonly type: "uint32";
            readonly internalType: "uint32";
        }, {
            readonly name: "subId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "requestID";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "payable";
    }, {
        readonly type: "function";
        readonly name: "requestSubscriptionOwnerTransfer";
        readonly inputs: readonly [{
            readonly name: "subId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "newOwner";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "setSignatureSender";
        readonly inputs: readonly [{
            readonly name: "newSignatureSender";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }];
    static createInterface(): IRandomnessSenderInterface;
    static connect(address: string, runner?: ContractRunner | null): IRandomnessSender;
}
