import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { BLS, BLSInterface } from "../BLS";
type BLSConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class BLS__factory extends ContractFactory {
    constructor(...args: BLSConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<BLS & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): BLS__factory;
    static readonly bytecode = "0x60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207d7cea24ef661185d8361167a4dc7a7abb7ea9736817897f8d9fdbf753fc10f164736f6c634300081c0033";
    static readonly abi: readonly [{
        readonly type: "error";
        readonly name: "BNAddFailed";
        readonly inputs: readonly [{
            readonly name: "input";
            readonly type: "uint256[4]";
            readonly internalType: "uint256[4]";
        }];
    }, {
        readonly type: "error";
        readonly name: "InvalidDSTLength";
        readonly inputs: readonly [{
            readonly name: "dst";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
    }, {
        readonly type: "error";
        readonly name: "InvalidFieldElement";
        readonly inputs: readonly [{
            readonly name: "x";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }, {
        readonly type: "error";
        readonly name: "MapToPointFailed";
        readonly inputs: readonly [{
            readonly name: "noSqrt";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }, {
        readonly type: "error";
        readonly name: "ModExpFailed";
        readonly inputs: readonly [{
            readonly name: "base";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "exponent";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "modulus";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }];
    static createInterface(): BLSInterface;
    static connect(address: string, runner?: ContractRunner | null): BLS;
}
export {};
