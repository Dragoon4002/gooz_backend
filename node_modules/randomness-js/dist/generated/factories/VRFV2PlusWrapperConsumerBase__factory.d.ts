import { type ContractRunner } from "ethers";
import type { VRFV2PlusWrapperConsumerBase, VRFV2PlusWrapperConsumerBaseInterface } from "../VRFV2PlusWrapperConsumerBase";
export declare class VRFV2PlusWrapperConsumerBase__factory {
    static readonly abi: readonly [{
        readonly type: "function";
        readonly name: "getBalance";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getLinkToken";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "contract LinkTokenInterface";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "i_vrfV2PlusWrapper";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "contract IVRFV2PlusWrapper";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "rawFulfillRandomWords";
        readonly inputs: readonly [{
            readonly name: "_requestId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_randomWords";
            readonly type: "uint256[]";
            readonly internalType: "uint256[]";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "error";
        readonly name: "OnlyVRFWrapperCanFulfill";
        readonly inputs: readonly [{
            readonly name: "have";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "want";
            readonly type: "address";
            readonly internalType: "address";
        }];
    }];
    static createInterface(): VRFV2PlusWrapperConsumerBaseInterface;
    static connect(address: string, runner?: ContractRunner | null): VRFV2PlusWrapperConsumerBase;
}
